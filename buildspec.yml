version: 0.2

env:
  variables:
      AWS_REGION: "ap-southeast-1"
      ARCHITECTURE: "amd64"
phases:
  install:
    runtime-versions:
       java: corretto17
  pre_build:
    commands:
       - mvn clean install
       - echo "loggin ECR"
       - aws --version
       - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 747610744334.dkr.ecr.ap-southeast-1.amazonaws.com
  build:
    commands:
       - docker build -t sample-service .
  post_build:
    commands:
       - docker tag sample-service:latest 747610744334.dkr.ecr.ap-southeast-1.amazonaws.com/sample-service:latest
       - docker push 747610744334.dkr.ecr.ap-southeast-1.amazonaws.com/sample-service:latest












# version: 0.2


# phases:
#   pre_build:
#     commands:
#       - mvn clean install
#       - echo Logging in to Amazon ECR...
#       - $(aws ecr get-login --region eu-north-1 --no-include-email)
#       - REPOSITORY_URI=747610744334.dkr.ecr.eu-north-1.amazonaws.com/spring-sample
#       - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#   build:
#     commands:
#       - echo Build started on `date`
#       - echo Building the Docker image...
#       - docker build -t $REPOSITORY_URI:latest .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Pushing the Docker images...
#       - docker push $REPOSITORY_URI:latest
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - echo Writing image definitions file...
#       - printf '[{"name":"order-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#       - cat imagedefinitions.json
# artifacts:
#   files:
#    - imagedefinitions.json
#    - target/order-service.jar

